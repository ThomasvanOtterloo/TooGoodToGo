// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(PackageDbContext))]
    [Migration("20221020122706_InitAddedData")]
    partial class InitAddedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Domain.Canteen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OfferHotMeals")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Canteens");
                });

            modelBuilder.Entity("Core.Domain.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CanteenId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Core.Domain.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AvailableUntil")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CanteenId")
                        .HasColumnType("int");

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Meal")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PickUp")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CanteenId");

                    b.HasIndex("StudentId");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvailableUntil = new DateTime(2022, 10, 23, 14, 27, 6, 11, DateTimeKind.Local).AddTicks(6137),
                            City = 1,
                            Description = "This is a package",
                            Meal = 1,
                            Name = "Package 1",
                            PickUp = new DateTime(2022, 10, 20, 14, 27, 6, 11, DateTimeKind.Local).AddTicks(6092),
                            Price = 10m,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 2,
                            AvailableUntil = new DateTime(2022, 10, 23, 14, 27, 6, 11, DateTimeKind.Local).AddTicks(6143),
                            City = 1,
                            Description = "This is a package",
                            Meal = 1,
                            Name = "Package 2",
                            PickUp = new DateTime(2022, 10, 20, 14, 27, 6, 11, DateTimeKind.Local).AddTicks(6141),
                            Price = 10m,
                            StudentId = 1
                        },
                        new
                        {
                            Id = 3,
                            AvailableUntil = new DateTime(2022, 10, 23, 14, 27, 6, 11, DateTimeKind.Local).AddTicks(6148),
                            City = 3,
                            Description = "This is a package",
                            Meal = 1,
                            Name = "Package 3",
                            PickUp = new DateTime(2022, 10, 20, 14, 27, 6, 11, DateTimeKind.Local).AddTicks(6146),
                            Price = 10m
                        },
                        new
                        {
                            Id = 4,
                            AvailableUntil = new DateTime(2022, 10, 23, 14, 27, 6, 11, DateTimeKind.Local).AddTicks(6153),
                            City = 3,
                            Description = "This is a package",
                            Meal = 1,
                            Name = "Package 4",
                            PickUp = new DateTime(2022, 10, 20, 14, 27, 6, 11, DateTimeKind.Local).AddTicks(6151),
                            Price = 10m
                        });
                });

            modelBuilder.Entity("Core.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("ContainsAlcohol")
                        .HasColumnType("bit");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContainsAlcohol = false,
                            Image = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.ah.nl%2Fproducten%2Fproduct%2Fwi",
                            Name = "Product 1"
                        },
                        new
                        {
                            Id = 2,
                            ContainsAlcohol = false,
                            Image = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.ah.nl%2Fproducten%2Fproduct%2Fwi",
                            Name = "Product 2"
                        },
                        new
                        {
                            Id = 3,
                            ContainsAlcohol = false,
                            Image = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.ah.nl%2Fproducten%2Fproduct%2Fwi",
                            Name = "Product 3"
                        },
                        new
                        {
                            Id = 4,
                            ContainsAlcohol = false,
                            Image = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.ah.nl%2Fproducten%2Fproduct%2Fwi",
                            Name = "Product 4"
                        },
                        new
                        {
                            Id = 5,
                            ContainsAlcohol = false,
                            Image = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.ah.nl%2Fproducten%2Fproduct%2Fwi",
                            Name = "Product 5"
                        },
                        new
                        {
                            Id = 6,
                            ContainsAlcohol = false,
                            Image = "https://www.google.com/url?sa=i&url=https%3A%2F%2Fwww.ah.nl%2Fproducten%2Fproduct%2Fwi",
                            Name = "Product 6"
                        });
                });

            modelBuilder.Entity("Core.Domain.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("City")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = 3,
                            Name = "Student 1",
                            PhoneNumber = "0612345678"
                        },
                        new
                        {
                            Id = 2,
                            City = 1,
                            Name = "Student 2",
                            PhoneNumber = "0612345678"
                        });
                });

            modelBuilder.Entity("PackageProduct", b =>
                {
                    b.Property<int>("PackagesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("PackagesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("PackageProduct");
                });

            modelBuilder.Entity("Core.Domain.Package", b =>
                {
                    b.HasOne("Core.Domain.Canteen", "Canteen")
                        .WithMany("Packages")
                        .HasForeignKey("CanteenId");

                    b.HasOne("Core.Domain.Student", "Student")
                        .WithMany("Packages")
                        .HasForeignKey("StudentId");

                    b.Navigation("Canteen");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("PackageProduct", b =>
                {
                    b.HasOne("Core.Domain.Package", null)
                        .WithMany()
                        .HasForeignKey("PackagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Domain.Canteen", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("Core.Domain.Student", b =>
                {
                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
